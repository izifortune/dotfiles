-- local M = {}
local nullls = require("null-ls")

-- require("null-ls").setup({
--     sources = {
--         nullls.builtins.formatting.stylua, nullls.builtins.formatting.prettier,
--         -- nullls.builtins.formatting.prettier.with({
--         --   filetypes = { "vue", "css", "scss", "less", "json", "jsonc", "yaml", "markdown", "graphql", "handlebars" }
--         -- }),
--         -- nullls.builtins.formatting.trim_whitespace.with({
--         --     filetypes = {"plantuml"}
--         -- }), -- nullls.builtins.formatting.autopep8,
--         -- -- nullls.builtins.formatting.shellcheck,
--         -- -- nullls.builtins.formatting.shfmt,
--         -- -- nullls.builtins.formatting.json_tool,
--         -- -- nullls.builtins.diagnostics.write_good,
--         -- -- nullls.builtins.code_actions.gitsigns,
--         -- -- nullls.builtins.formatting.sqlformat,
--         -- nullls.builtins.formatting.markdownlint,
--         -- nullls.builtins.formatting.lua_format,
--         -- nullls.builtins.formatting.stylelint,
--         -- nullls.builtins.diagnostics.write_good
--         --     .with({filetypes = {"markdown", "txt"}}),
--         -- nullls.builtins.diagnostics.proselint,
--         -- nullls.builtins.code_actions.proselint,
--         -- nullls.builtins.diagnostics.misspell,
--         -- nullls.builtins.diagnostics.alex
--
--         -- nullls.builtins.diagnostics.yamllint
--         -- pip install --user yamllint
--     }
--     -- you can reuse a shared lspconfig on_attach callback here
--     -- on_attach = function(client)
--     --     if client.resolved_capabilities.document_formatting then
--     --         vim.cmd([[
--     --         augroup LspFormatting
--     --             autocmd! * <buffer>
--     --             autocmd BufWritePre <buffer> lua vim.lsp.buf.formatting_sync()
--     --         augroup END
--     --         ]])
--     --     end
--     -- end
-- })
